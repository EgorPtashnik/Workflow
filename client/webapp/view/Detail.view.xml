<mvc:View controllerName='client.controller.Detail' displayBlock='true'
  xmlns='sap.m' xmlns:core='sap.ui.core' xmlns:c='client.custom'
  xmlns:mvc='sap.ui.core.mvc'>
  <Page showNavButton='true' navButtonPress='onNavBack' title='{store>/selectedProject/name}'>
    <headerContent>
      <Button tooltip='{i18n>createNewList}' press='openCreateCardPopover' icon='sap-icon://add'/>
      <Button tooltip='{i18n>settings}' icon='sap-icon://action-settings' press='onGoToSettings'/>
    </headerContent>
    <content>
      <IconTabBar headerMode='Inline' items='{store>/selectedProject/cards}'>
        <items>
          <IconTabFilter icon='{store>icon}' text='{store>name}' count='{store>items/length}'>
            <ScrollContainer horizontal='false' vertical='true' width='100%' height='{=${device>/support/touch}? "calc(100vh - 161px)" : "calc(100vh - 161px)"}'>
              <c:InputWithButton visible='{device>/support/touch}' valueHelpRequest='onCreateTask($event, ${store>ID})'/>
              <List delete='onDeleteTask' itemPress='onChangeListItemStatus' items='{path: "store>items", templateShareable: "false"}'>
                <headerToolbar>
                  <Toolbar>
                    <Text visible='{device>/support/touch}' text='{i18n>created}: {path: "store>createdAt", formatter: ".formatter.stringByDate"}'/>
                    <Title wrapping='true' visible='{=!${device>/support/touch}}' text='{i18n>created}: {path: "store>createdAt", formatter: ".formatter.stringByDate"}'/>
                    <ToolbarSpacer/>
                    <Input type='Text' visible='{=!${device>/support/touch}}' class='input' placeholder='{i18n>newTask}' submit='onCreateTask($event, ${store>ID})'/>
                    <ToggleButton visible='{=!${device>/support/touch}}' type='Reject' icon='sap-icon://delete' press='onChangeListMode'/>
                  </Toolbar>
                </headerToolbar>
                <CustomListItem type='Active' highlight='{=${store>done} === 0? "Error" : "Success"}'>
                  <HBox class='sapUiSmallMargin' alignItems='Center' justifyContent='{=${device>/support/touch}? "Start" : "SpaceBetween"}'>
                    <core:Icon visible='{device>/support/touch}' class='sapUiTinyMarginEnd' color='{=${store>done}? "Positive" : "Negative"}' src='{=${store>done}? "sap-icon://message-success" : "sap-icon://message-error"}'/>
                    <Text wrapping='true' text='{store>name}' visible='{device>/support/touch}'/>
                    <Title wrapping='true' text='{store>name}' visible='{=!${device>/support/touch}}'/>
                    <core:Icon color='{=${store>done}? "Positive" : "Negative"}' visible='{=!${device>/support/touch}}' src='{=${store>done}? "sap-icon://message-success" : "sap-icon://message-error"}'/>
                  </HBox>
                </CustomListItem>
                <swipeContent>
                  <Button type='Transparent' icon='sap-icon://decline' press='onDeleteTask'/>
                </swipeContent>
              </List>
            </ScrollContainer>
          </IconTabFilter>
        </items>
      </IconTabBar>
    </content>
  </Page>

  <!-- <m:Dialog title='{i18n>createNewCard}' id='idCreateCardDialog'>
    <m:VBox class='sapUiTinyMargin'>
      <m:Label text='{i18n>newCardName}'/>
      <m:Input value='{state>/newCardName}' submit='onCreateCard'/>
    </m:VBox>
    <m:buttons>
      <m:Button type='Emphasized' press='onCreateCard' text='{i18n>submit}'/>
      <m:Button type='Transparent' text='{i18n>cancel}' press='closeDialog'/>
    </m:buttons>
  </m:Dialog>

  <m:Dialog title='{i18n>editProject}' id='idEditProjectDialog'>
    <m:VBox class='sapUiTinyMargin'>
      <m:Label text='{i18n>projectName}:'/>
      <m:Input value='{store>/selectedProject/name}'/>
      <m:Label text='{i18n>projectDesc}'/>
      <m:TextArea growing='true' width='100%' value='{store>/selectedProject/desc}'/>
      <m:List noDataText='{i18n>noCards}' mode='Delete' delete='onDeleteCard' items='{path: "store>/selectedProject/cards", sorter: { path: "createdAt" } }'>
        <m:StandardListItem title="{store>name}" info="{store>items/length} items" infoState="Information"/>
      </m:List>
    </m:VBox>
    <m:buttons>
      <m:Button type='Emphasized' text='{i18n>submit}' press='onUpdateProject'/>
      <m:Button type='Transparent' text='{i18n>close}' press='closeDialog'/>
    </m:buttons>
  </m:Dialog> -->
</mvc:View>
